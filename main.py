from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
import requests
import os

app = FastAPI()

# ‚úÖ C·∫•u h√¨nh CORS ƒë·ªÉ cho ph√©p frontend truy c·∫≠p
app.add_middleware(
    CORSMiddleware,
    allow_origins=["https://academic-chat-refine.lovable.app"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# ‚úÖ Model d·ªØ li·ªáu nh·∫≠n t·ª´ frontend
class Query(BaseModel):
    prompt: str

# ‚úÖ Endpoint Gemini + API key
API_KEY = os.getenv("GEMINI_API_KEY")
GENAI_ENDPOINT = (
    "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=" + API_KEY
)

# ‚úÖ Endpoint x·ª≠ l√Ω chatbot
@app.post("/api/chat")
async def chat(query: Query):
    print("üì® Prompt nh·∫≠n ƒë∆∞·ª£c t·ª´ ng∆∞·ªùi d√πng:", query.prompt)

    # N·∫øu ch∆∞a c√≥ key th√¨ tr·∫£ gi·∫£ l·∫≠p
    if not API_KEY:
        print("‚ùå Ch∆∞a c·∫•u h√¨nh GEMINI_API_KEY trong bi·∫øn m√¥i tr∆∞·ªùng.")
        return {
            "answer": "Kh√¥ng t√¨m th·∫•y API key. Vui l√≤ng c·∫•u h√¨nh l·∫°i.",
            "sources": []
        }

    # T·∫°o payload g·ª≠i t·ªõi Gemini
    payload = {
        "contents": [
            {
                "parts": [
                    {"text": query.prompt}
                ]
            }
        ]
    }
    headers = {
        "Content-Type": "application/json"
    }

    try:
        response = requests.post(GENAI_ENDPOINT, json=payload, headers=headers)
        print("üì• Ph·∫£n h·ªìi th√¥ t·ª´ Gemini:", response.text)  # Log to√†n b·ªô JSON tr·∫£ v·ªÅ

        data = response.json()

        # Tr√≠ch xu·∫•t c√¢u tr·∫£ l·ªùi
        text_reply = data["candidates"][0]["content"]["parts"][0]["text"]

        return {
            "answer": text_reply,
            "sources": []  # Ch∆∞a c√≥ ph√¢n t√≠ch ngu·ªìn
        }

    except Exception as e:
        print("‚ùå L·ªói khi g·ªçi Gemini API:", e)
        return {
            "answer": "Xin l·ªói, ƒë√£ c√≥ l·ªói x·∫£y ra.",
            "sources": []
        }